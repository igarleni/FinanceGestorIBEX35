/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package financegestoribex35;

import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.Timer;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Rapsodia
 */
public class NewMainFrame extends JFrame
                               implements ActionListener{
    /**
     * Creates new form NewMainFrame
     */
    public NewMainFrame() {
        carpeta = null;
        this.frameList = new ArrayList<>();
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH); //maximizar la ventana
        setDate();
        Timer timDate = new Timer(20000,new ActionListener(){ // 20 segundos
            @Override
            public void actionPerformed(ActionEvent evt){
                setDate();
            }
        });
        timDate.start();
        
        CollectData();
        Timer timData = new Timer(180000,new ActionListener(){ // 3 minutos
            @Override
            public void actionPerformed(ActionEvent evt){
                CollectData();
            }
        });
        timData.start();
        
        
        comboBoxPut.addActionListener (new ActionListener () {
            @Override
            public void actionPerformed(ActionEvent e) {
                actualizaTablePUT();
            }
        });
        
        comboBoxCall.addActionListener (new ActionListener () {
            @Override
            public void actionPerformed(ActionEvent e) {
                actualizaTableCALL();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        crearCarteraDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        crearDialog = new javax.swing.JButton();
        cancelarDialog = new javax.swing.JButton();
        nombreCarteraNueva = new javax.swing.JTextField();
        explorarDialog = new javax.swing.JButton();
        errorCarpeta = new javax.swing.JLabel();
        errorNombre = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Fecha = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        Escritorio = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        Institucion = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaContado = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        TablaOpcionesPUT = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        comboBoxPut = new javax.swing.JComboBox();
        añadirPUT = new javax.swing.JButton();
        carteraBoxPUT = new javax.swing.JComboBox();
        udsPUT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        comboBoxCall = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        TablaOpcionesCALL = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        añadirCALL = new javax.swing.JButton();
        carteraBoxCALL = new javax.swing.JComboBox();
        udsCALL = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaFuturos = new javax.swing.JTable();
        BarraMenu = new javax.swing.JMenuBar();
        menuCartera = new javax.swing.JMenu();
        Abrir = new javax.swing.JMenuItem();
        Crear = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenu();

        crearCarteraDialog.setTitle("Crear cartera nueva");
        crearCarteraDialog.setBounds(new java.awt.Rectangle(250, 250, 0, 0));
        crearCarteraDialog.setMinimumSize(new java.awt.Dimension(511, 230));
        crearCarteraDialog.setResizable(false);

        jLabel1.setText("Nombre:");
        jLabel1.setToolTipText("");

        jLabel2.setText("Carpeta de destino:");

        crearDialog.setBackground(new java.awt.Color(0, 204, 51));
        crearDialog.setText("Crear");
        crearDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearDialogActionPerformed(evt);
            }
        });

        cancelarDialog.setBackground(new java.awt.Color(255, 0, 0));
        cancelarDialog.setText("Cancelar");
        cancelarDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarDialogActionPerformed(evt);
            }
        });

        explorarDialog.setText("Seleccionar carpeta");
        explorarDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                explorarDialogActionPerformed(evt);
            }
        });

        errorCarpeta.setForeground(new java.awt.Color(255, 0, 0));

        errorNombre.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout crearCarteraDialogLayout = new javax.swing.GroupLayout(crearCarteraDialog.getContentPane());
        crearCarteraDialog.getContentPane().setLayout(crearCarteraDialogLayout);
        crearCarteraDialogLayout.setHorizontalGroup(
            crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crearCarteraDialogLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorCarpeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(crearCarteraDialogLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(crearDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(cancelarDialog)
                        .addGap(0, 95, Short.MAX_VALUE))
                    .addComponent(explorarDialog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreCarteraNueva)
                    .addComponent(errorNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35))
        );
        crearCarteraDialogLayout.setVerticalGroup(
            crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crearCarteraDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errorNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreCarteraNueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(errorCarpeta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(explorarDialog)
                    .addComponent(jLabel2))
                .addGap(40, 40, 40)
                .addGroup(crearCarteraDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crearDialog)
                    .addComponent(cancelarDialog))
                .addGap(35, 35, 35))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Fecha.setEditable(false);

        Escritorio.setBackground(new java.awt.Color(220, 239, 249));
        Escritorio.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Institucion.setText("<html>Universidad de Las Palmas de Gran Canaria<br>Escuela de Ingeniería Informática<br>Diseño de Interfaces de Usuario<br>Nombres del Grupo</html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Institucion, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Institucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contado/Spot", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        TablaContado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Último", "Diferencia(%)", "Anterior", "Máximo", "Mínimo", "Fecha", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaContado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane6.setViewportView(TablaContado);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones IBEX35 - PUT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        TablaOpcionesPUT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaOpcionesPUT.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TablaOpcionesPUT.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(TablaOpcionesPUT);

        jLabel3.setText("Fecha de Vencimiento:");

        añadirPUT.setText("Añadir");
        añadirPUT.setToolTipText("Añadir opciones PUT a una cartera abierta");
        añadirPUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirPUTActionPerformed(evt);
            }
        });

        carteraBoxPUT.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar cartera..." }));

        jLabel5.setText("Uds. a");

        jLabel7.setText("Añadir");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(comboBoxPut, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(udsPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carteraBoxPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(añadirPUT, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxPut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(añadirPUT)
                    .addComponent(carteraBoxPUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udsPUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones IBEX35 - CALL", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        TablaOpcionesCALL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ejerciico", "Vol. Compra", "P Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaOpcionesCALL.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TablaOpcionesCALL.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(TablaOpcionesCALL);

        jLabel4.setText("Fecha de Vencimiento:");

        añadirCALL.setText("Añadir");
        añadirCALL.setToolTipText("Añadir opciones PUT a una cartera abierta");

        carteraBoxCALL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar cartera..." }));

        jLabel6.setText("Uds. a");

        jLabel8.setText("Añadir");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBoxCall, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(udsCALL, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carteraBoxCALL, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(añadirCALL, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(añadirCALL)
                    .addComponent(carteraBoxCALL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(udsCALL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(3, 3, 3))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Futuros (MINI) IBEX35", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        TablaFuturos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Vencimiento", "Vol. Compra", "P. Compra", "P Venta", "Vol. Venta", "Último", "Volumen", "Apertura", "Máximo", "Mínimo", "Anterior", "Hora(Madrid)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaFuturos.setToolTipText("");
        TablaFuturos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(TablaFuturos);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EscritorioLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EscritorioLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EscritorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        Escritorio.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(jPanel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Escritorio.setLayer(jPanel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane5.setViewportView(Escritorio);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane5)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE))
        );

        BarraMenu.setMinimumSize(new java.awt.Dimension(800, 600));

        menuCartera.setText("Cartera");

        Abrir.setText("Abrir");
        Abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AbrirMouseClicked(evt);
            }
        });
        Abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirActionPerformed(evt);
            }
        });
        menuCartera.add(Abrir);

        Crear.setText("Crear");
        Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearActionPerformed(evt);
            }
        });
        menuCartera.add(Crear);

        jMenuItem1.setText("jMenuItem1");
        menuCartera.add(jMenuItem1);

        BarraMenu.add(menuCartera);

        menuExit.setText("Exit");
        menuExit.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuExitMenuSelected(evt);
            }
        });
        BarraMenu.add(menuExit);

        setJMenuBar(BarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuExitMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuExitMenuSelected
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_menuExitMenuSelected

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        filechooser.setCurrentDirectory(null);
        filechooser.addChoosableFileFilter(new CarFilter());
        filechooser.setFileFilter(new CarFilter());
        
        int retorno = filechooser.showOpenDialog(Abrir);
        
        if (retorno == JFileChooser.APPROVE_OPTION){
            File file = filechooser.getSelectedFile();
            Cartera cartera = CarterasGestor.cargarCartera(file);
            //añadir nueva ventana "carteraFrame" con esta cartera
            CarteraFrame carteraFrame = new CarteraFrame(cartera, opciones.Opciones);
            carteraFrame.addInternalFrameListener(new InternalFrameAdapter() {
                @Override
                public void internalFrameClosing(InternalFrameEvent e){
                    carteraBoxCALL.removeItem(((CarteraFrame)(e.getInternalFrame())).cartera.nombre);
                    carteraBoxPUT.removeItem(((CarteraFrame)(e.getInternalFrame())).cartera.nombre);
                    frameList.remove(e.getInternalFrame());
                }
            });
            ///////////////////////////////TODO: AÑADIR AL ESCRITORIO (MAINFRAME)
            carteraFrame.setBounds(22, 140, 650, 300); 
            carteraFrame.setVisible(true);
            frameList.add(carteraFrame);
            Escritorio.add(carteraFrame);
            try {
                carteraFrame.setSelected(true);
            } catch (java.beans.PropertyVetoException e) {}
            //añadirlo al JComboBox
            carteraBoxPUT.addItem(cartera.nombre);
            carteraBoxCALL.addItem(cartera.nombre);
        }
    }//GEN-LAST:event_AbrirActionPerformed

    private void AbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AbrirMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_AbrirMouseClicked

    private void añadirPUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirPUTActionPerformed
        // TODO add your handling code here:
        if (Tools.esInteger(udsPUT.getText())){
            String nombreCartera = (String) carteraBoxPUT.getSelectedItem();
            
            //Añadir al arraylist
            Opcion opcion = new Opcion();
            opcion.Tipo = "PUT"; ///////////////////////"CALL" SI ES EL CASO DE OPCIONES CALL
            opcion.Ejercicio = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 0);
            opcion.Compra_Vol = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 1);
            opcion.Compra_Precio = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 2);
            opcion.Venta_Precio = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 3);
            opcion.Venta_Vol = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 4);
            opcion.Ultimo = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 5);
            opcion.Volumen = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 6);
            opcion.Hora = (String)TablaOpcionesPUT.getValueAt(TablaOpcionesPUT.getSelectedRow(), 7);
            opcion.Vencimiento = (String)comboBoxPut.getSelectedItem();
            
            CarteraFrame carteraFrame = buscarCarteraFrame(nombreCartera);
            carteraFrame.addOpcion(opcion, udsPUT.getText());
            CarteraFrame carteraActual = null;
            for (CarteraFrame carteraAdd : frameList) {
                if(carteraAdd.cartera.nombre.equals(carteraBoxPUT.getSelectedItem())) 
                    carteraActual = carteraAdd;
            }
            if(carteraActual != null)carteraActual.addOpcion(opcion, udsPUT.getText());
        
        }
    
    }//GEN-LAST:event_añadirPUTActionPerformed

    private void crearDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearDialogActionPerformed
        // TODO add your handling code here:
        errorNombre.setText("");
        errorCarpeta.setText("");
        fichero = new File(carpeta, nombreCarteraNueva.getText() + ".car");       
        if(fichero.exists() && !fichero.isDirectory()) errorNombre.setText("Ya existe un fichero con este nombre");
        if(nombreCarteraNueva.getText().equals("")) errorNombre.setText("Por favor, introduzca un nombre");
        if(carpeta == null) errorCarpeta.setText("Por favor, seleccione una carpeta");
        if(!(nombreCarteraNueva.getText().equals("")) && !(carpeta == null) && !(fichero.exists() && !fichero.isDirectory()))
        {
        try {
            fichero.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(NewMainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.print("" + carpeta + "\\"+ nombreCarteraNueva.getText() + ".car");
        cancelarDialogActionPerformed(evt);
        }
    }//GEN-LAST:event_crearDialogActionPerformed

    private void cancelarDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarDialogActionPerformed
        // TODO add your handling code here:
        explorarDialog.setText("Seleccionar carpeta");
        nombreCarteraNueva.setText(null);
        carpeta = null;
        crearCarteraDialog.setVisible(false);
    }//GEN-LAST:event_cancelarDialogActionPerformed

    private void CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearActionPerformed
        // TODO add your handling code here:
        crearCarteraDialog.setVisible(true);
    }//GEN-LAST:event_CrearActionPerformed

    private void explorarDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_explorarDialogActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        filechooser.setCurrentDirectory(null);
        filechooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (filechooser.showDialog(null, "Seleccione carpeta de destino") == JFileChooser.APPROVE_OPTION) {
        carpeta = filechooser.getSelectedFile();
        explorarDialog.setText(""+carpeta);
        System.out.println (carpeta.getName());
         }
    }//GEN-LAST:event_explorarDialogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JMenuBar BarraMenu;
    private javax.swing.JMenuItem Crear;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JTextField Fecha;
    private javax.swing.JLabel Institucion;
    private javax.swing.JTable TablaContado;
    private javax.swing.JTable TablaFuturos;
    private javax.swing.JTable TablaOpcionesCALL;
    private javax.swing.JTable TablaOpcionesPUT;
    private javax.swing.JButton añadirCALL;
    private javax.swing.JButton añadirPUT;
    private javax.swing.JButton cancelarDialog;
    private javax.swing.JComboBox carteraBoxCALL;
    private javax.swing.JComboBox carteraBoxPUT;
    private javax.swing.JComboBox comboBoxCall;
    private javax.swing.JComboBox comboBoxPut;
    private javax.swing.JDialog crearCarteraDialog;
    private javax.swing.JButton crearDialog;
    private javax.swing.JLabel errorCarpeta;
    private javax.swing.JLabel errorNombre;
    private javax.swing.JButton explorarDialog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JMenu menuCartera;
    private javax.swing.JMenu menuExit;
    private javax.swing.JTextField nombreCarteraNueva;
    private javax.swing.JTextField udsCALL;
    private javax.swing.JTextField udsPUT;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JTable jTable10;
    private javax.swing.JPanel internalPane;
    private List<CarteraFrame> frameList;
    File fichero;
    File carpeta;
    
    private MEFF_Contado contado = new MEFF_Contado();
    private MEFF_Futuros futuros = new MEFF_Futuros();
    private MEFF_Opciones opciones = new MEFF_Opciones();

private void setDate(){
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy  HH:mm ");
        String formatedDate = sdf.format(date);
        formatedDate = formatedDate.concat(" (local)");
        Fecha.setText(formatedDate);
    }

private Float toFloat(String texto){
        
        texto = texto.replace(".", "");
        texto = texto.replace(",", ".");
        return Float.valueOf(texto);
    }

private void CollectData(){
        
        //Notificaciones.setText("Recolectando datos ....");   
        
        // actualiza la tabla de contado
        contado.getSpot();
        TableModel model = TablaContado.getModel();
        TablaContado.setValueAt(contado.Spot, 0, 0);
        //TablaContado.setValueAt(contado.Diferencia, 0, 1);
        TablaContado.setValueAt(contado.Anterior, 0, 2);
        TablaContado.setValueAt(contado.Maximo, 0, 3);
        TablaContado.setValueAt(contado.Minimo, 0, 4);
        TablaContado.setValueAt(contado.Fecha, 0, 5);
        TablaContado.setValueAt(contado.Hora, 0, 6);
        
        Float diferencia = toFloat(contado.Diferencia);
        if(diferencia > 0){
            model.setValueAt("<html><font color='green'>"+diferencia+"</font></html>", 0, 1);
        }
        else if(diferencia < 0){
             model.setValueAt("<html><font color='red'>"+diferencia+"</font></html>", 0, 1);   
        }
        else{
            model.setValueAt("<html><font color='black'>"+diferencia+"</font></html>", 0, 1);
        }
        
        // actualiza la tabla de FUTUROS
        
        futuros.getFutures();
        int nfuturos = futuros.Futuros.size();
        DefaultTableModel tablemodel = (DefaultTableModel)TablaFuturos.getModel();
        tablemodel.setRowCount(nfuturos);
       
        
        for(int i=0;i<nfuturos;i++){
            Futuro f = futuros.Futuros.get(i);
            TablaFuturos.setValueAt(f.Vencimiento, i, 0);
            TablaFuturos.setValueAt(f.Compra_Vol, i, 1);
            TablaFuturos.setValueAt(f.Compra_Precio, i, 2);
            TablaFuturos.setValueAt(f.Venta_Precio, i, 3);
            TablaFuturos.setValueAt(f.Venta_Vol, i, 4);
            TablaFuturos.setValueAt(f.Ultimo, i, 5);
            TablaFuturos.setValueAt(f.Volumen, i, 6);
            TablaFuturos.setValueAt(f.Apertura, i, 7);
            TablaFuturos.setValueAt(f.Maximo, i, 8);
            TablaFuturos.setValueAt(f.Minimo, i, 9);
            TablaFuturos.setValueAt(f.Anterior, i, 10);
            TablaFuturos.setValueAt(f.Hora, i, 11);
        }
        //Notificaciones.setText("Datos disponibles");
        
        
        opciones.getOptions();
        int nOptions = opciones.Opciones.size();
        ArrayList putVencimiento = new ArrayList();
        ArrayList callVencimiento = new ArrayList();
        
        for(int i=0;i<nOptions;i++){
            
            Opcion opcion = opciones.Opciones.get(i);
            if(opcion.Tipo.equals("PUT")){
                if(!putVencimiento.contains(opcion.Vencimiento)){
                    putVencimiento.add(opcion.Vencimiento);
                    comboBoxPut.addItem(opcion.Vencimiento);
                }
            }
            
            if(opcion.Tipo.equals("CALL")){
                if(!callVencimiento.contains(opcion.Vencimiento)){
                    callVencimiento.add(opcion.Vencimiento);
                    comboBoxCall.addItem(opcion.Vencimiento);
                }
            }
        }
        comboBoxPut.setSelectedIndex(0);
        comboBoxCall.setSelectedIndex(0);
        actualizaTableCALL();
        actualizaTablePUT();
        
    }
    private CarteraFrame buscarCarteraFrame(String nombreCartera) {
        for (CarteraFrame carteraFrame : frameList) {
            if (carteraFrame.cartera.nombre.equals(nombreCartera))
                return carteraFrame;
        }
        return null;
    }


private void actualizaTablePUT(){
        opciones.getOptions();
        int fila = 0;
        DefaultTableModel tablemodel = (DefaultTableModel)TablaOpcionesPUT.getModel();
        int nOptions = opciones.Opciones.size();
        int nPutRows = 0;
        Object selectedItem = comboBoxPut.getSelectedItem();
        
        for(int i=0;i<nOptions;i++){
            Opcion opcion = opciones.Opciones.get(i);
            if(opcion.Tipo.equals("PUT") && opcion.Vencimiento.equals(selectedItem)) nPutRows++;
        
        }
        tablemodel.setRowCount(nPutRows);
        for(int i=0;i<nOptions;i++){
        
        Opcion opcion = opciones.Opciones.get(i);
        // actualiza la tabla de PUT
        if(opcion.Tipo.equals("PUT") && opcion.Vencimiento.equals(selectedItem)){
        TablaOpcionesPUT.setValueAt(opcion.Ejercicio, fila, 0);
        TablaOpcionesPUT.setValueAt(opcion.Compra_Vol, fila, 1);
        TablaOpcionesPUT.setValueAt(opcion.Compra_Precio, fila, 2);
        TablaOpcionesPUT.setValueAt(opcion.Venta_Precio, fila, 3);
        TablaOpcionesPUT.setValueAt(opcion.Venta_Vol, fila, 4);
        TablaOpcionesPUT.setValueAt(opcion.Ultimo, fila, 5);
        TablaOpcionesPUT.setValueAt(opcion.Volumen, fila, 6);
        TablaOpcionesPUT.setValueAt(opcion.Hora, fila, 7);
        fila++;
        }
    }
}

        
public void actualizaTableCALL(){
        opciones.getOptions();
        int fila = 0;
        DefaultTableModel tablemodel = (DefaultTableModel)TablaOpcionesCALL.getModel();
        int nOptions = opciones.Opciones.size();
        int nCallRows = 0;
        Object selectedItem = comboBoxCall.getSelectedItem();
        
        for(int i=0;i<nOptions;i++){
            Opcion opcion = opciones.Opciones.get(i);
            if(opcion.Tipo.equals("CALL") && opcion.Vencimiento.equals(selectedItem)) nCallRows++;
        
        }
        tablemodel.setRowCount(nCallRows);
        for(int i=0;i<nOptions;i++){
        
        Opcion opcion = opciones.Opciones.get(i);
        // actualiza la tabla de CALL
        if(opcion.Tipo.equals("CALL") && opcion.Vencimiento.equals(selectedItem)){
        TablaOpcionesCALL.setValueAt(opcion.Ejercicio, fila, 0);
        TablaOpcionesCALL.setValueAt(opcion.Compra_Vol, fila, 1);
        TablaOpcionesCALL.setValueAt(opcion.Compra_Precio, fila, 2);
        TablaOpcionesCALL.setValueAt(opcion.Venta_Precio, fila, 3);
        TablaOpcionesCALL.setValueAt(opcion.Venta_Vol, fila, 4);
        TablaOpcionesCALL.setValueAt(opcion.Ultimo, fila, 5);
        TablaOpcionesCALL.setValueAt(opcion.Volumen, fila, 6);
        TablaOpcionesCALL.setValueAt(opcion.Hora, fila, 7);
        fila++;
        }
    }
} 

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


}
